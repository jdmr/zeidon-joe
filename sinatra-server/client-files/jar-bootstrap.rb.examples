# This file lists some expamples of how to extend and add functionality to the
# Zeidon Sinatra LOD server.

# ========================================================================
#
# Title: Override the default text field for a Zeidon domain.
#
# The following code tells the sinatra server to use a a different HTML text input
# field for a Zeidon domain.  In this example, sinatra uses the ACE code editor
# (written in java script) to display and edit Zeidon attributes with the domain
# 'RubyCode'.

# Define a class that has one method, 'input_field_for_attrib'.  This will generate
# the HTML for displaying the ACE editor.
# Params:
#	attrib - The Zeidon attribute that is being edited/displayed.
#	param_name - the name of the HTML param name.
#       args - ?
class RubyCodeDomain
  def input_field_for_attrib( attrib, param_name, args = {} )
    return <<-code
<td valign="top" style="height: 400px; width: 700px">
    <input type='hidden'
           id='editorvalue'
           name='#{param_name}' />
  <div id="editor" style="height: 400px; width: 700px">#{CGI::escapeHTML(attrib.to_s)}</div>
  <script src="/js/ace/ace.js" type="text/javascript" charset="utf-8"></script>
  <script>
      function change() {
          var field = document.getElementById("editorvalue");
          value = editor.getValue();
          field.value = value;
      }

      var editor = ace.edit("editor");
      var session = editor.session;
      session.setTabSize(4);
      session.setUseSoftTabs(true);
      session.setMode("ace/mode/ruby");
      session.on('change', change);
  </script>
</td>
code
 end
end

load "sinatra_framework.rb"

# Following tells framework to use RubyCodeDomain to generate HTML for all 
# attributes that have the domain RubyCode.
domain_mapping "RubyCode", RubyCodeDomain.new

# ========================================================================
#
# Title: Create application-specific web end points.

get '/:application/logAlgorithm' do
  # code here.
end

load "sinatra_framework.rb"

# ========================================================================
#
# Title: Specify the LOD that will be used to list an entity for includes.
#
# To include an entity, the framework assumes there is a LOD with the same name
# as the entity to be included.  To specify a different lod, use
# lod_for_entity_list.

# Tell framework to use LOD named "CatTag" to list the "CategoryTag".
lod_for_entity_list "CatTag", "CategoryTag"






